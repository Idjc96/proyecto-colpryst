/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

-- Crear la base de datos y seleccionarla
create database colpryst_col3;
use colpryst_col3;

-- Crear tabla 'cargo'
create table cargo (
    id_cargo int auto_increment not null,
    nombre_cargo varchar(80) not null,
    descripcion varchar(80),
    constraint pk_cargo primary key (id_cargo)
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- Crear tabla 'usuario'
create table usuario (
    id_usuario int auto_increment not null,
    tipo_documento varchar(20) not null,
    numero_documento varchar(20) not null unique,
    nombre_empleado varchar(80) not null,
    direccion_empleado varchar(80),
    telefono_empleado varchar(80), 
    email_empleado varchar(80) not null unique,
    eps_empleado varchar(80),
    usuarioadmin varchar(80) unique,
    contrasenia varchar(100),
    id_cargo int not null,
    constraint pk_usuario primary key (id_usuario),
    constraint fk_usuario_cargo foreign key (id_cargo) references cargo (id_cargo)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- Crear tabla 'reconocimiento_facial' con columna tipo BLOB
CREATE TABLE reconocimiento_facial (
    id_foto INT AUTO_INCREMENT NOT NULL,
    embedding TEXT NOT NULL,  -- AquÃ­ se guarda el embedding como texto (ej: "[0.1, -0.2, ...]")
    id_usuario INT NOT NULL,
    CONSTRAINT pk_reconocimiento_facial PRIMARY KEY (id_foto),
    CONSTRAINT fk_reconocimiento_usuario FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- Crear tabla 'reconocimiento_facial'
CREATE TABLE reconocimiento_facial (
    id_foto INT AUTO_INCREMENT NOT NULL,
    embedding LONGTEXT NOT NULL,  -- AquÃ­ se guarda el embedding como texto (ej: "[0.1, -0.2, ...]")
    id_usuario INT NOT NULL,
    CONSTRAINT pk_reconocimiento_facial PRIMARY KEY (id_foto),
    CONSTRAINT fk_reconocimiento_usuario FOREIGN KEY (id_usuario) REFERENCES usuario (id_usuario)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- Crear tabla 'registro_entrada'
create table registro_entrada (
    id_entrada int auto_increment not null,
    fecha_hora datetime not null,
    comentarios varchar(500),
    id_usuario int not null,
    constraint pk_registro_entrada primary key (id_entrada),
    constraint fk_registro_usuario foreign key (id_usuario) references usuario (id_usuario)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- Crear tabla 'notificacion_entrada_tarde'
create table notificacion_entrada_tarde (
    id_notificacion int auto_increment not null,
    id_entrada int not null,
    id_usuario int not null,
    estado boolean not null,
    fecha_hora datetime not null,
    comentarios varchar(500) not null,
    constraint pk_notificacion primary key (id_notificacion),
    constraint fk_notificacion_entrada foreign key (id_entrada) references registro_entrada (id_entrada)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- Crear tabla 'registro_salida'
create table registro_salida (
    id_salida int auto_increment not null,
    fecha_hora datetime not null,
    comentarios varchar(500),
    id_usuario int not null,
    constraint pk_registro_salida primary key (id_salida),
    constraint fk_salida_usuario foreign key (id_usuario) references usuario (id_usuario)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;

-- crear tabla 'registro_inasistencia'

create table registro_inasistencia(
id_inasistencia INT AUTO_INCREMENT NOT NULL,
fecha_hora DATETIME NOT NULL,
comentarios VARCHAR(500),
estado BOOLEAN NOT NULL,
id_usuario int not null,
constraint pk_inasistencia primary key (id_inasistencia),
constraint fk_inasistencia foreign key (id_usuario) references usuario (id_usuario)
)ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_spanish2_ci;


-- INSERT
-- InserciÃ³n de registros en la tabla Cargo
INSERT INTO Cargo (nombre_cargo, descripcion) VALUES 
('Gerente', 'Gerente de operaciones'),
('Desarrollador', 'Desarrollador de software'),
('Contador', 'Encargado de finanzas'),
('Soporte TÃ©cnico', 'Soporte de IT'),
('Marketing', 'Especialista en marketing'),
('Recursos Humanos', 'GestiÃ³n de personal'),
('Vendedor', 'Venta de productos'),
('Analista', 'Analista de datos'),
('Director', 'Director de la empresa'),
('Administrativo', 'AdministraciÃ³n general');

-- InserciÃ³n de registros en la tabla Usuario
INSERT INTO usuario (tipo_documento, numero_documento, nombre_empleado, direccion_empleado, telefono_empleado, email_empleado, eps_empleado, usuarioadmin, contrasenia, id_cargo
) VALUES
-- ðŸ“Œ 1 Gerente (ID Cargo = 1)
('DNI', '12345678A', 'Carlos PÃ©rez', 'Calle 123, Ciudad A', '3001234567', 'carlos.perez@colpryst.com', 'EPS001', 'carlos.perez', 'admin123', 1),  

-- ðŸ“Œ 1 Administrativo (ID Cargo = 10)
('DNI', '23456789B', 'Ana GÃ³mez', 'Avenida 456, Ciudad B', '3102345678', 'ana.gomez@colpryst.com', 'EPS002', 'ana.gomez', NULL, 10),  

-- ðŸ“Œ 3 Desarrolladores (ID Cargo = 2)
('DNI', '34567890C', 'Luis MartÃ­nez', 'Carrera 789, Ciudad C', '3203456789', 'luis.martinez@colpryst.com', 'EPS003', 'luis.martinez', 'subadmin789', 2),  
('DNI', '45678901D', 'Marta RodrÃ­guez', 'Calle 101, Ciudad D', '3304567890', 'marta.rodriguez@colpryst.com', 'EPS004', 'marta.rodriguez', NULL, 2),  
('DNI', '56789012E', 'Jorge FernÃ¡ndez', 'Avenida 112, Ciudad E', '3405678901', 'jorge.fernandez@colpryst.com', 'EPS005', 'jorge.fernandez', NULL, 2),  

-- ðŸ“Œ 2 Contadores (ID Cargo = 3)
('DNI', '67890123F', 'LucÃ­a DÃ­az', 'Carrera 131, Ciudad F', '3506789012', 'lucia.diaz@colpryst.com', 'EPS006', 'lucia.diaz', NULL, 3),  
('DNI', '78901234G', 'Juan LÃ³pez', 'Calle 415, Ciudad G', '3607890123', 'juan.lopez@colpryst.com', 'EPS007', 'juan.lopez', NULL, 3),  

-- ðŸ“Œ 5 Soporte TÃ©cnico (ID Cargo = 4)
('DNI', '89012345H', 'Elena SÃ¡nchez', 'Avenida 161, Ciudad H', '3708901234', 'elena.sanchez@colpryst.com', 'EPS008', 'elena.sanchez', NULL, 4),  
('DNI', '90123456I', 'Pedro GutiÃ©rrez', 'Carrera 718, Ciudad I', '3809012345', 'pedro.gutierrez@colpryst.com', 'EPS009', 'pedro.gutierrez', NULL, 4),  
('DNI', '01234567J', 'Sara Ruiz', 'Calle 192, Ciudad J', '3900123456', 'sara.ruiz@colpryst.com', 'EPS010', 'sara.ruiz', NULL, 4),  
('DNI', '11111111K', 'AndrÃ©s Torres', 'Avenida 221, Ciudad K', '3011234567', 'andres.torres@colpryst.com', 'EPS011', 'andres.torres', NULL, 4),  
('DNI', '22222222L', 'Gabriel NÃºÃ±ez', 'Carrera 324, Ciudad L', '3022345678', 'gabriel.nunez@colpryst.com', 'EPS012', 'gabriel.nunez', NULL, 4),  

-- ðŸ“Œ 3 Marketing (ID Cargo = 5)
('DNI', '33333333M', 'Natalia Herrera', 'Calle 456, Ciudad M', '3033456789', 'natalia.herrera@colpryst.com', 'EPS013', 'natalia.herrera', NULL, 5),  
('DNI', '44444444N', 'Emilio Castro', 'Avenida 789, Ciudad N', '3044567890', 'emilio.castro@colpryst.com', 'EPS014', 'emilio.castro', NULL, 5),  
('DNI', '55555555O', 'Marta Blanco', 'Carrera 101, Ciudad O', '3055678901', 'marta.blanco@colpryst.com', 'EPS015', 'marta.blanco', NULL, 5),  

-- ðŸ“Œ 2 Recursos Humanos (ID Cargo = 6)
('DNI', '66666666P', 'Esteban SuÃ¡rez', 'Calle 112, Ciudad P', '3066789012', 'esteban.suarez@colpryst.com', 'EPS016', 'esteban.suarez', NULL, 6),  
('DNI', '77777777Q', 'Rosa Delgado', 'Avenida 131, Ciudad Q', '3077890123', 'rosa.delgado@colpryst.com', 'EPS017', 'rosa.delgado', NULL, 6),  

-- ðŸ“Œ 5 Vendedores (ID Cargo = 7)
('DNI', '88888888R', 'TomÃ¡s Gil', 'Carrera 415, Ciudad R', '3088901234', 'tomas.gil@colpryst.com', 'EPS018', 'tomas.gil', NULL, 7),  
('DNI', '99999999S', 'Valeria Rojas', 'Calle 161, Ciudad S', '3099012345', 'valeria.rojas@colpryst.com', 'EPS019', 'valeria.rojas', NULL, 7),  
('DNI', '10101010T', 'Carla Vega', 'Avenida 718, Ciudad T', '3100123456', 'carla.vega@colpryst.com', 'EPS020', 'carla.vega', NULL, 7),  
('DNI', '11122233U', 'Ricardo Flores', 'Carrera 192, Ciudad U', '3111234567', 'ricardo.flores@colpryst.com', 'EPS021', 'ricardo.flores', NULL, 7),  
('DNI', '22233344V', 'Alejandro Ortiz', 'Calle 221, Ciudad V', '3122345678', 'alejandro.ortiz@colpryst.com', 'EPS022', 'alejandro.ortiz', NULL, 7),  

-- ðŸ“Œ 3 Analistas (ID Cargo = 8)
('DNI', '33344455W', 'Raquel SÃ¡nchez', 'Avenida 324, Ciudad W', '3133456789', 'raquel.sanchez@colpryst.com', 'EPS023', 'raquel.sanchez', NULL, 8),  
('DNI', '44455566X', 'Pablo DÃ­az', 'Carrera 456, Ciudad X', '3144567890', 'pablo.diaz@colpryst.com', 'EPS024', 'pablo.diaz', NULL, 8),  
('DNI', '55566677Y', 'MartÃ­n Herrera', 'Calle 789, Ciudad Y', '3155678901', 'martin.herrera@colpryst.com', 'EPS025', 'martin.herrera', NULL, 8),  

-- ðŸ“Œ 1 Director (ID Cargo = 9)
('DNI', '66677788Z', 'Laura Castillo', 'Avenida 101, Ciudad Z', '3166789012', 'laura.castillo@colpryst.com', 'EPS026', 'laura.castillo', 'director2024', 9);



/*--------------------------------------------------------------------------------------------------------------
-------------------------TRIGGER (PARA QUE EMPIECE A FUNCIONAR ANTES DE INSERTAR DATOS)-------------------------*/

-- 	TRIGGER --- PARA LLEGADA TARDE DESPUES DE LAS 7:30
DELIMITER $$

CREATE TRIGGER notificar_llegada_tarde
AFTER INSERT ON registro_entrada
FOR EACH ROW
BEGIN
    -- Verifica si la hora de entrada es despuÃ©s de las 07:30 AM
    IF TIME(NEW.fecha_hora) > '07:30:00' THEN
        -- Inserta un registro en la tabla notificacion_entrada_tarde
        INSERT INTO notificacion_entrada_tarde (id_entrada, id_usuario, estado, fecha_hora, comentarios) 
        VALUES (
            NEW.id_entrada, 
            NEW.id_usuario, 
            FALSE,  -- Estado en false por defecto
            NEW.fecha_hora, 
            COALESCE(NEW.comentarios, 'Sin comentarios') -- Si comentarios es NULL, usa "Sin comentarios"
        );
    END IF;
END $$

DELIMITER ;

-- DROP TRIGGER IF EXISTS notificar_llegada_tarde;

/*--------------------------------------------------------------------------------------------------------------
------------------------------------------INSERT REGISTRO ENTRADA---------------------------------------------------*/

-- InserciÃ³n de registros en la tabla RegistroEntrada
-- LUNES
INSERT INTO registro_entrada (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Lunes (2 llegan tarde)
('2024-09-02 07:45:00', 'Retraso por trÃ¡fico', 3), 
('2024-09-02 07:50:00', 'Consulta mÃ©dica', 5), 
('2024-09-02 07:20:00', NULL, 1),  
('2024-09-02 07:25:00', NULL, 2),  
('2024-09-02 07:28:00', NULL, 4),  
('2024-09-02 07:15:00', NULL, 6),  
('2024-09-02 07:29:00', NULL, 7),  
('2024-09-02 07:30:00', NULL, 8),  
('2024-09-02 07:10:00', NULL, 9),  
('2024-09-02 07:05:00', NULL, 10);  

-- MARTES
INSERT INTO registro_entrada (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Martes (Todos antes de 7:30 AM)
('2024-09-03 07:15:00', NULL, 1),  
('2024-09-03 07:20:00', NULL, 2),  
('2024-09-03 07:25:00', NULL, 3),  
('2024-09-03 07:28:00', NULL, 4),  
('2024-09-03 07:10:00', NULL, 5),  
('2024-09-03 07:18:00', NULL, 6),  
('2024-09-03 07:22:00', NULL, 7),  
('2024-09-03 07:25:00', NULL, 8),  
('2024-09-03 07:27:00', NULL, 9),  
('2024-09-03 07:29:00', NULL, 10);
  

-- MIERCOLES
INSERT INTO registro_entrada (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… MiÃ©rcoles (4 llegan tarde)
('2024-09-04 07:35:00', 'Retraso por accidente vial', 2),  
('2024-09-04 07:40:00', 'Problemas de transporte', 4),  
('2024-09-04 07:50:00', 'Consulta mÃ©dica', 8),  
('2024-09-04 07:55:00', 'Problemas personales', 10),  
('2024-09-04 07:10:00', NULL, 1),  
('2024-09-04 07:20:00', NULL, 3),  
('2024-09-04 07:25:00', NULL, 5),  
('2024-09-04 07:27:00', NULL, 6),  
('2024-09-04 07:28:00', NULL, 7),  
('2024-09-04 07:29:00', NULL, 9);  

-- JUEVES
INSERT INTO registro_entrada (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Jueves (4 llegan tarde)
('2024-09-05 07:33:00', 'Retraso en transporte pÃºblico', 3),  
('2024-09-05 07:40:00', 'Problema familiar', 5),  
('2024-09-05 07:45:00', 'TrÃ¡fico pesado', 6),  
('2024-09-05 07:50:00', 'OlvidÃ³ documento y regresÃ³', 9),  
('2024-09-05 07:10:00', NULL, 1),  
('2024-09-05 07:15:00', NULL, 2),  
('2024-09-05 07:18:00', NULL, 4),  
('2024-09-05 07:20:00', NULL, 7),  
('2024-09-05 07:22:00', NULL, 8),  
('2024-09-05 07:25:00', NULL, 10);

  
-- VIERNES
INSERT INTO registro_entrada (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Viernes (Todos antes de 7:30 AM)
('2024-09-06 07:10:00', NULL, 1),  
('2024-09-06 07:15:00', NULL, 2),  
('2024-09-06 07:18:00', NULL, 3),  
('2024-09-06 07:20:00', NULL, 4),  
('2024-09-06 07:22:00', NULL, 5),  
('2024-09-06 07:23:00', NULL, 6),  
('2024-09-06 07:24:00', NULL, 7),  
('2024-09-06 07:26:00', NULL, 8),  
('2024-09-06 07:28:00', NULL, 9),  
('2024-09-06 07:29:00', NULL, 10);  

-- SABADO
INSERT INTO registro_entrada (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… SÃ¡bado (1 llega tarde)
('2024-09-07 07:40:00', 'Retraso por transporte', 3),  
('2024-09-07 07:10:00', NULL, 1),  
('2024-09-07 07:15:00', NULL, 2),  
('2024-09-07 07:18:00', NULL, 4),  
('2024-09-07 07:22:00', NULL, 5),  
('2024-09-07 07:25:00', NULL, 6),  
('2024-09-07 07:28:00', NULL, 7),  
('2024-09-07 07:29:00', NULL, 8),  
('2024-09-07 07:30:00', NULL, 9),  
('2024-09-07 07:29:00', NULL, 10);

/*--------------------------------------------------------------------------------------------------------------
-----------------------------------------------PROCEDURE-------------------------------------------------------*/
-- -- ANTES ACTUALIZAR EL ESTADO MEDIANTE EL ID
UPDATE notificacion_entrada_tarde SET  estado = TRUE WHERE id_entrada =  2; 

DELIMITER $$

CREATE PROCEDURE eliminar_registros_true()
BEGIN
	-- variable que guardara el valor del id obtenido de consulta
	DECLARE id INT;
    -- SENTENCIA PARA CUANDO ENCUENTRE UN REGISTRO CON ESTADO VALOR TRUE 
	SELECT id_notificacion into id 
    FROM notificacion_entrada_tarde 
    WHERE estado = TRUE
    LIMIT 5; -- para evitar error 1172
	-- CONDICIONAL
	IF id IS NOT NULL THEN  -- Verifica si el Valor es diferente de NULL
		DELETE FROM notificacion_entrada_tarde
        WHERE id_notificacion = id; -- elimina si el id coincide con el id guarado
	ELSE
		SIGNAL SQLSTATE '45000' -- EXCEPCION
		SET MESSAGE_TEXT = 'USUARIO NO RESGITRADO EN TABLA LLEGADA TARDE'; -- si el valor es null, se emuestra mensaje
    END IF;
END $$

DELIMITER ;

CALL eliminar_registros_true();

DROP PROCEDURE IF EXISTS eliminar_registros_true;


/*--------------------------------------------------------------------------------------------------------------
------------------------------------------INSERT REGISTRO SALIDA SIN ALGUNOS REGISTROS---------------------------------------------------*/
-- LUNES
INSERT INTO registro_salida (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Lunes (3 salen antes de las 5:30 PM)
('2024-09-02 17:00:00', 'Salida por cita mÃ©dica', 2),
('2024-09-02 17:10:00', 'Salida anticipada por reuniÃ³n familiar', 5),
('2024-09-02 17:20:00', 'Permiso especial', 7),
('2024-09-02 17:40:00', NULL, 1),
('2024-09-02 17:45:00', NULL, 3),
('2024-09-02 17:50:00', NULL, 4),
('2024-09-02 18:00:00', NULL, 6),
('2024-09-02 18:05:00', NULL, 8),
('2024-09-02 18:10:00', NULL, 9),
('2024-09-02 18:15:00', NULL, 10);

-- MARTES
INSERT INTO registro_salida (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Martes (Todos despuÃ©s de las 5:30 PM)
('2024-09-03 17:35:00', NULL, 1),
('2024-09-03 17:40:00', NULL, 2),
('2024-09-03 17:45:00', NULL, 3),
('2024-09-03 17:50:00', NULL, 4),
('2024-09-03 17:55:00', NULL, 5),
('2024-09-03 18:00:00', NULL, 6),
('2024-09-03 18:05:00', NULL, 7),
('2024-09-03 18:10:00', NULL, 8),
('2024-09-03 18:15:00', NULL, 9),
('2024-09-03 18:20:00', NULL, 10);

-- MIERCOLES
INSERT INTO registro_salida (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… MiÃ©rcoles (3 salen antes de las 5:30 PM)
('2024-09-04 16:50:00', 'Salida por urgencia mÃ©dica', 3),
('2024-09-04 17:05:00', 'Salida por evento escolar de hijo', 6),
('2024-09-04 17:20:00', 'Salida anticipada por cita importante', 8),
('2024-09-04 17:45:00', NULL, 1),
('2024-09-04 17:50:00', NULL, 2),
('2024-09-04 18:00:00', NULL, 4),
('2024-09-04 18:05:00', NULL, 5),
('2024-09-04 18:10:00', NULL, 7),
('2024-09-04 18:15:00', NULL, 9),
('2024-09-04 18:20:00', NULL, 10);

-- JUEVES
INSERT INTO registro_salida (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Jueves (Todos despuÃ©s de las 5:30 PM)
('2024-09-05 17:35:00', NULL, 1),
('2024-09-05 17:40:00', NULL, 2),
('2024-09-05 17:45:00', NULL, 3),
('2024-09-05 17:50:00', NULL, 4),
('2024-09-05 17:55:00', NULL, 5),
('2024-09-05 18:00:00', NULL, 6),
('2024-09-05 18:05:00', NULL, 7),
('2024-09-05 18:10:00', NULL, 8),
('2024-09-05 18:15:00', NULL, 9),
('2024-09-05 18:20:00', NULL, 10);

-- VIERNES
INSERT INTO registro_salida (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… Viernes (Todos despuÃ©s de las 5:30 PM)
('2024-09-06 17:35:00', NULL, 1),
('2024-09-06 17:40:00', NULL, 2),
('2024-09-06 17:45:00', NULL, 3),
('2024-09-06 17:50:00', NULL, 4),
('2024-09-06 17:55:00', NULL, 5),
('2024-09-06 18:00:00', NULL, 6),
('2024-09-06 18:05:00', NULL, 7),
('2024-09-06 18:10:00', NULL, 8),
('2024-09-06 18:15:00', NULL, 9),
('2024-09-06 18:20:00', NULL, 10);

-- SABADO
INSERT INTO registro_salida (fecha_hora, comentarios, id_usuario) VALUES
-- ðŸ“… SÃ¡bado (Todos despuÃ©s de las 5:30 PM)
('2024-09-07 17:35:00', NULL, 1),
('2024-09-07 17:40:00', NULL, 2),
('2024-09-07 17:45:00', NULL, 3),
('2024-09-07 17:50:00', NULL, 4),
('2024-09-07 17:55:00', NULL, 5),
('2024-09-07 18:00:00', NULL, 6),
('2024-09-07 18:05:00', NULL, 7),
('2024-09-07 18:10:00', NULL, 8),
('2024-09-07 18:15:00', NULL, 9),
('2024-09-07 18:20:00', NULL, 10);




-- DROP DATABASE Colpryst_Col3;